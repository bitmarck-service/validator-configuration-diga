<?xml version="1.0" encoding="UTF-8"?>
<!--
   - Copyright Â© 2020 - 2021 BITMARCK Service GmbH
   -
   - Licensed under the Apache License, Version 2.0 (the "License");
   - you may not use this file except in compliance with the License.
   - You may obtain a copy of the License at
   -
   -     http://www.apache.org/licenses/LICENSE-2.0
   -
   - Unless required by applicable law or agreed to in writing, software
   - distributed under the License is distributed on an "AS IS" BASIS,
   - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   - See the License for the specific language governing permissions and
   - limitations under the License.
   -->
<project default="test">

    <description>Builds the KOSIT Validator configuration for DiGA invoices.</description>

    <property name="build.dir" value="build"/>
    <property name="config.dir" value="${build.dir}/config"/>
    <property name="lib.dir" value="lib"/>
    <property name="saxon.version" value="10.6"/>
    <property name="schxslt.version" value="1.8.5"/>
    <property name="validator.version" value="1.4.2"/>
    <property name="xrechnung.download.url"
              value="https://github.com/itplr-kosit/validator-configuration-xrechnung/releases/download"/>

    <target name="test" depends="build">
        <apply executable="java" failonerror="true">
            <arg value="-jar"/>
            <arg value="lib/validationtool-1.4.2-standalone.jar"/>
            <arg value="-h"/>
            <arg value="-s"/>
            <arg file="build/config/scenarios.xml"/>
            <arg value="-o"/>
            <arg value="build/test"/>
            <fileset dir="src/test/resources" includes="**/*.xml" excludes="dre0/*-falsch.xml"/>
        </apply>
    </target>

    <target name="build">
        <parallel>
            <mkdir dir="${build.dir}"/>
            <mkdir dir="${config.dir}"/>
            <mkdir dir="${lib.dir}"/>
        </parallel>
        <parallel threadcount="3">
            <get dest="${lib.dir}" httpusecaches="true" skipexisting="true"
                 src="https://repo1.maven.org/maven2/net/sf/saxon/Saxon-HE/${saxon.version}/Saxon-HE-${saxon.version}.jar"/>
            <sequential>
                <get dest="${lib.dir}" httpusecaches="true" skipexisting="true"
                     src="https://github.com/schxslt/schxslt/releases/download/v${schxslt.version}/schxslt-${schxslt.version}-xslt-only.zip"/>
                <unzip dest="${lib.dir}/schxslt" overwrite="false" src="${lib.dir}/schxslt-${schxslt.version}-xslt-only.zip">
                    <cutdirsmapper dirs="1"/>
                    <patternset>
                        <exclude name="*/1.0/"/>
                    </patternset>
                </unzip>
            </sequential>
            <sequential>
                <get dest="${lib.dir}" httpusecaches="true" skipexisting="true"
                     src="https://github.com/itplr-kosit/validator/releases/download/v${validator.version}/validator-${validator.version}-distribution.zip"/>
                <unzip dest="${lib.dir}" overwrite="false" src="${lib.dir}/validator-${validator.version}-distribution.zip">
                    <patternset>
                        <include name="*-standalone.jar"/>
                    </patternset>
                </unzip>
            </sequential>
            <sequential>
                <get dest="${lib.dir}" httpusecaches="true" skipexisting="true"
                     src="${xrechnung.download.url}/release-2019-12-30/validator-configuration-xrechnung_1.2.2_2019-12-30.zip"/>
                <unzip dest="${lib.dir}/xrechnung_1.2.2" overwrite="false"
                       src="${lib.dir}/validator-configuration-xrechnung_1.2.2_2019-12-30.zip">
                    <patternset>
                        <include name="resources/"/>
                        <include name="scenarios.xml"/>
                    </patternset>
                </unzip>
            </sequential>
            <sequential>
                <get dest="${lib.dir}" httpusecaches="true" skipexisting="true"
                     src="${xrechnung.download.url}/release-2020-07-31/validator-configuration-xrechnung_2.0.0_2020-07-31.zip"/>
                <unzip dest="${lib.dir}/xrechnung_2.0.0" overwrite="false"
                       src="${lib.dir}/validator-configuration-xrechnung_2.0.0_2020-07-31.zip">
                    <patternset>
                        <include name="resources/"/>
                        <include name="scenarios.xml"/>
                    </patternset>
                </unzip>
            </sequential>
        </parallel>
        <parallel>
            <copy todir="${config.dir}">
                <fileset dir="src/main/resources"/>
                <file file="LICENSE"/>
                <file file="README.md"/>
            </copy>
            <xslt basedir="src/main/schematron" classpath="${lib.dir}/Saxon-HE-${saxon.version}.jar"
                  destdir="${config.dir}/schematron" extension=".xsl"
                  style="${lib.dir}/schxslt/2.0/pipeline-for-svrl.xsl"/>
        </parallel>
        <zip basedir="${config.dir}" destfile="${config.dir}.zip" filesonly="true"/>
    </target>

    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

    <target name="dist-clean" depends="clean">
        <delete dir="${lib.dir}"/>
    </target>
</project>
